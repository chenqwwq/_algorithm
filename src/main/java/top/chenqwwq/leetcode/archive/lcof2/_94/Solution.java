package top.chenqwwq.leetcode.archive.lcof2._94;import java.util.Arrays;/** * @author chenbingxin * @date 2021/12/29 **/public class Solution {    public int minCut(String s) {        int n = s.length();        int[] dp = new int[n];        char[] arr = s.toCharArray();        Arrays.fill(dp, n - 1);        for (int i = 0; i < n; i++) {            getAnswer(arr, i, i, dp);            getAnswer(arr, i, i + 1, dp);        }        return dp[n - 1];    }    private void getAnswer(char[] arr, int i, int j, int[] dp) {        int n = arr.length;        while (i >= 0 && j < n && arr[i] == arr[j]) {            dp[j] = Math.min(dp[j], (i == 0 ? -1 : dp[i - 1]) + 1);            i--;            j++;        }    }}